// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataLayer.Repositories
{
    using DataLayer.Entities;

    public partial interface IDataLayerDbContext : System.IDisposable
    {
        System.Data.Entity.DbSet<ToDoItem> ToDoItems { get; set; } // ToDoItems

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        int DeleteToDoItems(long? toDoItemId);
        // DeleteToDoItemsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        int InsertToDoItems(long? toDoItemId, string toDoItem, bool? toDoStrikeThrough);
        // InsertToDoItemsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

        System.Collections.Generic.List<SelectToDoItemsReturnModel> SelectToDoItems();
        System.Collections.Generic.List<SelectToDoItemsReturnModel> SelectToDoItems(out int procResult);
        System.Threading.Tasks.Task<System.Collections.Generic.List<SelectToDoItemsReturnModel>> SelectToDoItemsAsync();

        int UpdateToDoItems(long? toDoItemId, string toDoItem, bool? toDoStrikeThrough);
        // UpdateToDoItemsAsync cannot be created due to having out parameters, or is relying on the procedure result (int)

    }

}
// </auto-generated>
